{"version":3,"file":"static/js/387.9b111f28.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/services.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  justify-content: center;\n  gap: 50px 30px;\n`;\n\nexport const Persone = styled.li`\n  width: 100px;\n  height: 150px;\n`;\n\nexport const Images = styled.img`\n  border-radius: 8px;\n  margin-bottom: 2px;\n`;\n\nexport const CastName = styled.p`\n  color: #cbf9ff;\n  text-align: center;\n`;\n\nexport const AnyCast = styled.p`\n  font-size: 40px;\n  color: #cbf9ff;\n  text-align: center;\n`;","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieCast } from 'services/services';\n\nimport { Persone, List, Images, CastName, AnyCast } from './Cast.styled';\nimport Loader from 'components/Loader/Loader';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      try {\n        setIsLoading(true);\n        const data = await getMovieCast(id);\n        setCast(data.cast);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovieCast();\n  }, [id]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {!isLoading && cast.length > 0 && (\n        <List>\n          {cast?.map(item => (\n            <Persone key={item.id}>\n              <Images\n                src={\n                  item.profile_path !== null\n                    ? `https://image.tmdb.org/t/p/w500${item.profile_path}`\n                    : 'http://placehold.it/100x150'\n                }\n                alt={item.name}\n              />\n              <CastName>{item.name}</CastName>\n            </Persone>\n          ))}\n        </List>\n      )}\n      {!isLoading && cast.length === 0 && (\n        <AnyCast>\n          We don't have any information about cast for this movie\n        </AnyCast>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e37708b7fb6536a3c046b3464e4c85b5';\n\nexport const getMoviesApi = async () => {\n  try {\n    const response = await axios.get('/trending/all/day?language=en-US', {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    const getMovies = response.data.results;\n    return getMovies;\n  } catch (error) {\n    console.log(error.message);\n    throw error;\n  }\n};\n\nexport const getMovieSearch = async query => {\n  try {\n    const response = await axios.get(\n      `/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n      {\n        params: {\n          api_key: API_KEY,\n        },\n      }\n    );\n\n    const getMovies = response.data.results;\n    return getMovies;\n  } catch (error) {\n    console.log(error.message);\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    const getMovies = response.data;\n    return getMovies;\n  } catch (error) {\n    console.log(error.message);\n    throw error;\n  }\n};\n\nexport const getMovieCast = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}/credits?language=en-US`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    const getMovies = response.data;\n    return getMovies;\n  } catch (error) {\n    console.log(error.message);\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}/reviews?language=en-US`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    const getMovies = response.data;\n    return getMovies;\n  } catch (error) {\n    console.log(error.message);\n    throw error;\n  }\n};\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Persone","_templateObject2","Images","_templateObject3","CastName","_templateObject4","AnyCast","_templateObject5","id","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","isLoading","setIsLoading","useEffect","fetchMovieCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getMovieCast","sent","t0","console","log","finish","stop","apply","arguments","_jsxs","_Fragment","children","_jsx","Loader","length","map","item","src","profile_path","concat","alt","name","axios","API_KEY","getMoviesApi","response","getMovies","params","api_key","results","abrupt","message","getMovieSearch","_ref2","_callee2","query","_context2","_x","getMovieDetails","_ref3","_callee3","_context3","_x2","_ref4","_callee4","_context4","_x3","getMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}