{"version":3,"file":"static/js/799.6f575e28.chunk.js","mappings":"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","sources":["pages/MoviesDetails/MovieDetails.styled.js","pages/MoviesDetails/MoviesDetails.jsx","services/services.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const LinkLi = styled(Link)`\n  border: 1px solid #cbf9ff;\n  padding: 10px;\n  text-decoration: none;\n  border-radius: 8px;\n  color: #cbf9ff;\n  display: inline-block;\n  margin-top: 20px;\n  &:hover {\n    background-color: rgba(203, 249, 255, 0.1);\n  }\n`;\n\nexport const ItemCast = styled.li`\n  display: flex;\n  gap: 20px;\n  margin-top: 40px;\n  width: 900px;\n  padding-left: 100px;\n`;\n\nexport const Poster = styled.img`\n  height: 500px;\n  width: 350px;\n  border-radius: 10px;\n`;\n\nexport const BoxInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 20px;\n`;\n\nexport const Title = styled.h3`\n  font-family: system-ui;\n  font-weight: 400;\n  font-size: 35px;\n  color: #cbf9ff;\n`;\n\nexport const SpanTitle = styled.span`\n  color: #f44336;\n  letter-spacing: 2px;\n  margin-bottom: 30px;\n`;\n\nexport const BoldText = styled.h3`\n  font-family: system-ui;\n  font-weight: 700;\n  color: #cbf9ff;\n`;\n\nexport const Text = styled.h3`\n  font-family: system-ui;\n  font-weight: 400;\n  color: #cbf9ff;\n`;\n\nexport const GenresList = styled.ul`\n  font-family: system-ui;\n  font-weight: 400;\n  color: #cbf9ff;\n  display: flex;\n  gap: 10px;\n  font-size: 18px;\n`;\n\nexport const CastList = styled.ul`\n  font-family: system-ui;\n  font-weight: 400;\n  color: #cbf9ff;\n  display: flex;\n  gap: 10px;\n  font-size: 18px;\n  margin-left: 200px;\n`;\n\nexport const LinkCast = styled(Link)`\n  border: 1px solid #cbf9ff;\n  padding: 10px;\n  text-decoration: none;\n  border-radius: 8px;\n  color: #cbf9ff;\n  display: inline-block;\n  margin-top: 20px;\n`;\n","import { Suspense, useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\n\nimport { getMovieDetails } from 'services/services';\n\nimport {\n  BoldText,\n  BoxInfo,\n  ItemCast,\n  Poster,\n  SpanTitle,\n  Text,\n  Title,\n  GenresList,\n  LinkLi,\n  LinkCast,\n  CastList,\n} from './MovieDetails.styled';\nimport Loader from 'components/Loader/Loader';\n\nconst MoviesDetails = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/');\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        setIsLoading(true);\n        const data = await getMovieDetails(id);\n        setMovie(data);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [id]);\n\n  if (!movie) {\n    return <Loader />;\n  }\n\n  return (\n    <>\n      <LinkLi to={backLink.current}>Back in black</LinkLi>\n      {isLoading && <Loader />}\n      <ItemCast>\n        <Poster\n          src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n          alt={movie.title}\n        />\n        <BoxInfo>\n          <Title>\n            {movie.title}&nbsp;\n            <SpanTitle>({movie.release_date.substring(0, 4)})</SpanTitle>\n          </Title>\n          <BoldText>Overview: </BoldText>\n          <Text>{movie.overview}</Text>\n          <BoldText>Rate: {movie.vote_average}</BoldText>\n          <BoldText>Popularity: {movie.popularity.toFixed(0)}%</BoldText>\n          <GenresList>\n            <p>Genres :</p>\n            {movie.genres?.map(genre => (\n              <li key={genre.id}>\n                <p>{genre.name}</p>\n              </li>\n            ))}\n          </GenresList>\n        </BoxInfo>\n      </ItemCast>\n      <CastList>\n        <li>\n          <LinkCast to=\"cast\">Cast</LinkCast>\n        </li>\n        <li>\n          <LinkCast to=\"reviews\">Reviews</LinkCast>\n        </li>\n      </CastList>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MoviesDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e37708b7fb6536a3c046b3464e4c85b5';\n\nexport const getMoviesApi = async () => {\n  try {\n    const response = await axios.get('/trending/all/day?language=en-US', {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    const getMovies = response.data.results;\n    return getMovies;\n  } catch (error) {\n    console.log(error.message);\n    throw error;\n  }\n};\n\nexport const getMovieSearch = async query => {\n  try {\n    const response = await axios.get(\n      `/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n      {\n        params: {\n          api_key: API_KEY,\n        },\n      }\n    );\n\n    const getMovies = response.data.results;\n    return getMovies;\n  } catch (error) {\n    console.log(error.message);\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    const getMovies = response.data;\n    return getMovies;\n  } catch (error) {\n    console.log(error.message);\n    throw error;\n  }\n};\n\nexport const getMovieCast = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}/credits?language=en-US`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    const getMovies = response.data;\n    return getMovies;\n  } catch (error) {\n    console.log(error.message);\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}/reviews?language=en-US`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    const getMovies = response.data;\n    return getMovies;\n  } catch (error) {\n    console.log(error.message);\n    throw error;\n  }\n};\n"],"names":["LinkLi","styled","Link","_templateObject","_taggedTemplateLiteral","ItemCast","_templateObject2","Poster","_templateObject3","BoxInfo","_templateObject4","Title","_templateObject5","SpanTitle","_templateObject6","BoldText","_templateObject7","Text","_templateObject8","GenresList","_templateObject9","CastList","_templateObject10","LinkCast","_templateObject11","_location$state$from","_location$state","_movie$genres","id","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","location","useLocation","backLink","useRef","state","from","_useState3","_useState4","isLoading","setIsLoading","useEffect","fetchMovieDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getMovieDetails","sent","t0","console","log","finish","stop","apply","arguments","_jsxs","_Fragment","children","_jsx","to","current","Loader","src","concat","poster_path","alt","title","release_date","substring","overview","vote_average","popularity","toFixed","genres","map","genre","name","Suspense","fallback","Outlet","axios","API_KEY","getMoviesApi","response","getMovies","params","api_key","results","abrupt","message","getMovieSearch","_ref2","_callee2","query","_context2","_x","_ref3","_callee3","_context3","_x2","getMovieCast","_ref4","_callee4","_context4","_x3","getMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}