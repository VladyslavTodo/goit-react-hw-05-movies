{"version":3,"file":"static/js/16.82f53bcf.chunk.js","mappings":"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","sources":["components/services/services.js","pages/MovieDetails.styled.js","pages/MoviesDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e37708b7fb6536a3c046b3464e4c85b5';\n\nexport const getMoviesApi = async () => {\n  try {\n    const response = await axios.get('/trending/all/day?language=en-US', {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    const getMovies = response.data.results;\n    return getMovies;\n  } catch (error) {\n    console.log(error.message);\n    throw error;\n  }\n};\n\nexport const getMovieSearch = async query => {\n  try {\n    const response = await axios.get(\n      `/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n      {\n        params: {\n          api_key: API_KEY,\n        },\n      }\n    );\n\n    const getMovies = response.data.results;\n    return getMovies;\n  } catch (error) {\n    console.log(error.message);\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    const getMovies = response.data;\n    return getMovies;\n  } catch (error) {\n    console.log(error.message);\n    throw error;\n  }\n};\n\nexport const getMovieCast = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}/credits?language=en-US`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    const getMovies = response.data;\n    return getMovies;\n  } catch (error) {\n    console.log(error.message);\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}/reviews?language=en-US`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    const getMovies = response.data;\n    return getMovies;\n  } catch (error) {\n    console.log(error.message);\n    throw error;\n  }\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const LinkLi = styled(Link)`\n  border: 1px solid #cbf9ff;\n  padding: 10px;\n  text-decoration: none;\n  border-radius: 8px;\n  color: #cbf9ff;\n  display: inline-block;\n  margin-top: 20px;\n  &:hover {\n    background-color: rgba(203, 249, 255, 0.1);\n  }\n`;\n\nexport const ItemCast = styled.li`\n  display: flex;\n  gap: 20px;\n  margin-top: 40px;\n  width: 900px;\n  padding-left: 100px;\n`;\n\nexport const Poster = styled.img`\n  height: 500px;\n  width: 350px;\n  border-radius: 10px;\n`;\n\nexport const BoxInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 20px;\n`;\n\nexport const Title = styled.h3`\n  font-family: system-ui;\n  font-weight: 400;\n  font-size: 35px;\n  color: #cbf9ff;\n`;\n\nexport const SpanTitle = styled.span`\n  color: #f44336;\n  letter-spacing: 2px;\n  margin-bottom: 30px;\n`;\n\nexport const BoldText = styled.h3`\n  font-family: system-ui;\n  font-weight: 700;\n  color: #cbf9ff;\n`;\n\nexport const Text = styled.h3`\n  font-family: system-ui;\n  font-weight: 400;\n  color: #cbf9ff;\n`;\n\nexport const GenresList = styled.ul`\n  font-family: system-ui;\n  font-weight: 400;\n  color: #cbf9ff;\n  display: flex;\n  gap: 10px;\n  font-size: 18px;\n`;\n\nexport const CastList = styled.ul`\n  font-family: system-ui;\n  font-weight: 400;\n  color: #cbf9ff;\n  display: flex;\n  gap: 10px;\n  font-size: 18px;\n  margin-left: 200px;\n`;\n\nexport const LinkCast = styled(Link)`\n  border: 1px solid #cbf9ff;\n  padding: 10px;\n  text-decoration: none;\n  border-radius: 8px;\n  color: #cbf9ff;\n  display: inline-block;\n  margin-top: 20px;\n`;\n","import { Suspense, useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\n\nimport { getMovieDetails } from 'components/services/services';\n\nimport {\n  BoldText,\n  BoxInfo,\n  ItemCast,\n  Poster,\n  SpanTitle,\n  Text,\n  Title,\n  GenresList,\n  LinkLi,\n  LinkCast,\n  CastList,\n} from './MovieDetails.styled';\nimport Loader from 'components/Loader/Loader';\n\nconst MoviesDetails = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const data = await getMovieDetails(id);\n        setMovie(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [id]);\n\n  if (!movie) {\n    return <Loader />;\n  }\n\n  return (\n    <>\n      <LinkLi to={backLink.current}>Back in black</LinkLi>\n      <ItemCast>\n        <Poster\n          src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n          alt={movie.title}\n        />\n        <BoxInfo>\n          <Title>\n            {movie.title}&nbsp;\n            <SpanTitle>({movie.release_date.substring(0, 4)})</SpanTitle>\n          </Title>\n          <BoldText>Overview: </BoldText>\n          <Text>{movie.overview}</Text>\n          <BoldText>Rate: {movie.vote_average}</BoldText>\n          <BoldText>Popularity: {movie.popularity.toFixed(0)}%</BoldText>\n          <GenresList>\n            <p>Genres :</p>\n            {movie.genres?.map(genre => (\n              <li key={genre.id}>\n                <p>{genre.name}</p>\n              </li>\n            ))}\n          </GenresList>\n        </BoxInfo>\n      </ItemCast>\n      <CastList>\n        <li>\n          <LinkCast to=\"cast\">Cast</LinkCast>\n        </li>\n        <li>\n          <LinkCast to=\"reviews\">Reviews</LinkCast>\n        </li>\n      </CastList>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MoviesDetails;\n"],"names":["axios","API_KEY","getMoviesApi","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","getMovies","_context","prev","next","params","api_key","sent","data","results","abrupt","t0","console","log","message","stop","apply","arguments","getMovieSearch","_ref2","_callee2","query","_context2","concat","_x","getMovieDetails","_ref3","_callee3","id","_context3","_x2","getMovieCast","_ref4","_callee4","_context4","_x3","getMovieReviews","_ref5","_callee5","_context5","_x4","LinkLi","styled","Link","_templateObject","_taggedTemplateLiteral","ItemCast","_templateObject2","Poster","_templateObject3","BoxInfo","_templateObject4","Title","_templateObject5","SpanTitle","_templateObject6","BoldText","_templateObject7","Text","_templateObject8","GenresList","_templateObject9","CastList","_templateObject10","LinkCast","_templateObject11","_location$state$from","_location$state","_movie$genres","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","location","useLocation","backLink","useRef","state","from","useEffect","fetchMovieDetails","_jsxs","_Fragment","children","_jsx","to","current","src","poster_path","alt","title","release_date","substring","overview","vote_average","popularity","toFixed","genres","map","genre","name","Suspense","fallback","Loader","Outlet"],"sourceRoot":""}